.Dd October 27, 2016
.Dt "ssolver" 6
.Os
.Sh NAME
.Nm ssolver
.Nd Solve a given sudoku
.Sh SYNOPSIS
.Nm
.Ar arguments ...
.Sh DESCRIPTION
The
.Nm
accepts sudokus form 
.Ar stdin 
and prints the solved sudoku as output. 
It can also print the steps to solve a sudoku.
The
.Ar sudoku
is a character string which contains two types of objects: the numbers,
and special characters to represent blank boxes.
.Pp
It uses the following algorithms to solve sudokus
.Pp
.Bl -bullet -offset indent -compact
.It
Naked Singles / Pairs / Triples
.It
Hidden Singles
.It
Pointing Box Columns / Rows
.It
Box Line Reduce
.It
X-Wing
.It
Y-Wing
.It
Trial and Error
.El
.Pp
The
.Ar sudoku
must contain 81 characters, each for a box. Blank boxes are represented by spaces (' '), dots ('.') or zeroes ('0').
.Sh OPTIONS
By default, the program prints the question, unsolved, and then prints the solution. The following options may be specified to modify the behaviour of the program:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Ns Ar -a
Print license info and exit 
.It Ns Ar -h
Print list of supported arguments and exit.
.It Ns Ar -l
Solve the
.Ar sudoku 
logically only (no trial and error).
.It Ns Ar -s
Print the least possible to
.Ar stdout
(silent). It will only print the 
.Ar sudoku 
in a single line, not as a grid
.It Ns Ar -t
Print the steps to solve a
.Ar sudoku.
.It Ns Ar -v
Print the version
.El
.Pp
Note that 
.Ar -s 
and 
.Ar -t 
are mutually independent of each other. The program will exit if both are used simultaneously.
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
Solve logically and print the steps : 
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Ns
.Nm
-lt
.El
.Pp
Solve silently :
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Ns
.Nm
-s
.El
.Sh BUGS
None
